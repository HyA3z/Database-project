-- takes a patientId as input and returns a result set containing the patient's first name, last name, appointment date, diagnosis, treatment, and medication name

CREATE OR REPLACE FUNCTION getPatientMedicalHistory(patientId INT)
RETURNS TABLE (
    FirstName VARCHAR(50),
    LastName VARCHAR(50),
    AppointmentDate DATE,
    Diagnosis VARCHAR(200),
    Treatment VARCHAR(200),
    MedicationName VARCHAR(50)
)
AS $$
BEGIN
    RETURN QUERY
    SELECT
        p.FirstName,
        p.LastName,
        a.AppointmentDate,
        mr.Diagnosis,
        mr.Treatment,
        m.MedicationName
    FROM
        Patients p
        INNER JOIN Appointments a ON p.PatientID = a.PatientID
        LEFT JOIN MedicalRecords mr ON a.PatientID = mr.PatientID
        LEFT JOIN Prescriptions pr ON a.PatientID = pr.PatientID
        LEFT JOIN Medications m ON pr.MedicationID = m.MedicationID
    WHERE
        p.PatientID = getPatientMedicalHistory.patientId;
END;
$$ LANGUAGE plpgsql;


SELECT * FROM getPatientMedicalHistory(3);

-- Appointment, medical record and billing information related to the specified patientID

CREATE OR REPLACE FUNCTION get_patient_details(
    patient_id INT
) RETURNS TABLE(
    appointment_date DATE,
    appointment_time TIME,
    doctor_first_name VARCHAR(50),
    doctor_last_name VARCHAR(50),
    diagnosis VARCHAR(200),
    treatment VARCHAR(200),
    bill_date DATE,
    total_cost DECIMAL(10,2)
) AS $$
BEGIN
    RETURN QUERY
    SELECT 
        a.appointmentdate AS appointment_date,
        a.appointmenttime AS appointment_time,
        d.firstname AS doctor_first_name,
        d.lastname AS doctor_last_name,
        m.diagnosis AS diagnosis,
        m.treatment AS treatment,
        b.billdate AS bill_date,
        b.totalcost AS total_cost
    FROM 
        appointments a
        JOIN doctors d ON a.doctorid = d.doctorid
        JOIN medicalrecords m ON a.patientid = m.patientid AND a.doctorid = m.doctorid
        JOIN billing b ON a.patientid = b.patientid
    WHERE 
        a.patientid = patient_id;
END;
$$ LANGUAGE plpgsql;

SELECT * FROM get_patient_details(1);
